[{"data":1,"prerenderedAt":100},["ShallowReactive",2],{"/blog/tictactoe":3,"/blog/tictactoe-related":99},{"id":4,"title":5,"body":6,"createdAt":84,"description":85,"extension":86,"header":87,"indicatorsHidden":87,"meta":88,"navigation":89,"path":90,"related":91,"seo":93,"special":87,"stem":94,"tags":95},"posts/blog/Tictactoe.md","Tic Tac Toe in Assembly",{"type":7,"value":8,"toc":79},"minimal",[9,13,16,19,22,25,28,31,34,37,40,43,46,49,52,55,58,61,64,67,70],[10,11,12],"p",{},"Tic Tac Toe is a timeless classic, and what better way to explore low-level programming than by implementing it in 8086 Assembly Language? In this blog post, we'll walk through the process of building a fully functional 3x3 Tic Tac Toe game.",[10,14,15],{},"🎮 Features",[10,17,18],{},"Interactive 3x3 Game BoardThe board dynamically updates with each move.",[10,20,21],{},"Seamless Player InteractionPlayers input positions (1-9) to mark their moves.",[10,23,24],{},"Smooth Alternating TurnsTurns switch between players automatically.",[10,26,27],{},"Real-Time UpdatesThe board is refreshed instantly after every move.",[10,29,30],{},"Victory & Draw Detection 🏆🤝The game identifies winners based on aligned marks and handles draws.",[10,32,33],{},"Input Validation 🚫Ensures players don't overwrite previous moves.",[10,35,36],{},"📝 How to Play",[10,38,39],{},"Start the Game: Run the assembly code in an 8086-compatible emulator like DOSBox or TASM.",[10,41,42],{},"Choose Your Move: Enter a number (1-9) to place your mark.",[10,44,45],{},"Alternate Turns: Watch the board update dynamically.",[10,47,48],{},"Win or Draw: The game detects a winner or a draw and displays a message accordingly.",[10,50,51],{},"💡 Tech Stack",[10,53,54],{},"Language: 8086 Assembly Language",[10,56,57],{},"Tools: DOSBox, TASM, or any compatible emulator",[10,59,60],{},"Example Execution",[10,62,63],{},"The game starts with an empty 3x3 board. Players take turns selecting a position, and the board updates in real-time.",[10,65,66],{},"Once a player wins or the board is full, the game announces the result.",[10,68,69],{},"Start coding your own Tic Tac Toe in Assembly today and explore the magic of low-level programming! 🚀",[10,71,72,73],{},"👉 ",[74,75,78],"a",{"href":76,"style":77},"https://github.com/abrarahmd/TicTacToe-Assembly_Language","color:blue;","GitHub Repository",{"title":80,"searchDepth":81,"depth":82,"links":83},"",2,5,[],"2025-01-05T00:00:00.000Z","A deep dive into building a Tic Tac Toe game using 8086 Assembly Language, showcasing the elegance of low-level programming.","md",null,{},true,"/blog/tictactoe",[92],"abrar ahmed",{"title":5,"description":85},"blog/Tictactoe",[96,97,98],"tic-tac-toe","assembly","emu8086",[],1740689558905]